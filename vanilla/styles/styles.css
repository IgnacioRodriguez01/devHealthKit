:root {
    background-color: #26262f;
    --tool-bg: #1F1F28;
    --popup-bg: #363657;
    --input: #292942;
    --green: #57FF90;
    --text: #FFFFFF;
    --text2: #A3A3A3;
    --text3: #D0D0D0;
}

* {
    color: white;
    font-family: 'Inter', sans-serif;
}

p {
    width: fit-content;
    height: fit-content;
}

body {
    display: flex;
    overflow: hidden;
}

section {
    height: 100vh;
    overflow-y: scroll;
}

nav {
    width: fit-content;
    background-color: #000000;
}

/* Popup */
.mask {
    background-color: rgba(0, 0, 0, 0.4);
    z-index: 10;
}

.popup {
    position: relative;
    min-width: 40vw;
    width: 50vw;  /* check */
    max-width: 70vw;
    background-color: var(--popup-bg);
}

.popup-close {
    position: absolute;
    right: 1.75rem;
    transition: 0.2s ease;
}

.popup-close:hover {
    filter: brightness(0.8);
}

.popup-body {
    margin: 2rem auto 2rem auto;
}

/* Settings */
#popup-settings {
    width: 70vw;
    max-width: 900px;
}
#popup-settings .popup-body{
    display: flex;
    width: 100%;
    overflow-y: scroll;
}
#popup-settings .col1, #popup-settings .col2{
    height: 100%;
    width: 50%;
}

#popup-settings label {
    margin: 20px 0 20px 0;
}
#popup-settings label span {
    margin-left: 10px;
    font-weight: bold;
    font-size: 1.25rem;
}
#popup-settings label {
    margin: 10px 0 10px 0;
}
#popup-settings .col2 label span {
    font-size: 1rem;
}

.sound-grid {
    width: 280px;
    display: grid;
    grid-auto-flow: column;
    grid-template-columns: 0.33fr 0.19fr 0.33fr 0.19fr;
    grid-template-rows: min-content min-content;
    gap: 10px 10px;
    grid-template-areas:
        ". . . ."
        ". . . .";
    justify-items: start;
    align-items: center;
}
.sound-grid input, .time-grid input {
    text-align: center;
    width: 100%;
    color: var(--text3);
    font-weight: bold;
    background-color: var(--input);
    padding: 0.4rem;
    border-radius: 0.25rem;
    outline: none;
}
.sound-grid p:nth-child(1) {
    grid-column: 1 / span 2;
}
.sound-grid #sett-alarm {
    grid-column: 3 / span 2;
}
.time-grid {
    width: 220px;
    margin-top: 10px;
    display: grid;
    grid-auto-flow: row;
    grid-template-columns: 2fr 1fr 0.5fr 1fr 0.5fr 1fr;
    grid-template-rows: min-content min-content;
    gap: 0px 0px;
    grid-template-areas:
        ". . . . . ."
        ". . . . . .";
    justify-items: center;
    align-items: center;
}
.time-grid p:nth-child(1) {
    justify-self: flex-start;
}
@media screen and (max-width: 950px) {
    #popup-settings{
        height: 70vh;
    }
    #popup-settings .popup-body{
        flex-direction: column;
    }
    #popup-settings .col1, #popup-settings .col2{
        width: 100%;
        margin-top: 20px;
    }
}
@media screen and (max-width: 550px) {
    #popup-settings{
        width: 90vw;
    }
}

/* Timers */
.timer-cont {
    background-color: #272730;
    width: fit-content;
    display: flex;
    /* better with grid */
    flex-wrap: wrap;
    gap: 3.25rem;
}

.tool {
    background: var(--tool-bg);
    position: relative;
    width: 300px;
    height: 300px;
}

.main {
    margin: auto;
}

.stitle {
    color: var(--text2);
}

.counter {
    margin-left: auto;
    margin-right: auto;
    font-size: 88px;
}

.counter-evr,
.counter-for {
    margin-right: auto;
}

.sync {
    position: absolute;
    right: 1.25rem;
    transition: 0.2s ease;
}

.start {
    background: url("/img/play.svg");
}
.add {
    background: url("/img/plus-lg.svg");
}
.pause {
    background: url("/img/pause.svg");
}
.stop {
    background: url("/img/stop.svg");
}

.control:hover,
.sync:hover,
.settings:hover,
nav p:hover {
    filter: brightness(0.8);
}
.control:active,
.sync:active,
.settings:active,
nav p:active {
    transform: scale(0.9);
}

.control {
    background-repeat: no-repeat;
    background-position: center;
    transition: 0.2s ease;
    min-height: 24px;
    min-width: 24px;
}

#timeradd {
    background-image: url("data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='24' ry='24' stroke='%23959595FF' stroke-width='4' stroke-dasharray='20' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e");
    border-radius: 24px;
    background-color: transparent;
    transition: 0.2s ease;
    -webkit-user-select: none;
    /* Safari */
    -ms-user-select: none;
    /* IE 10 and IE 11 */
    user-select: none;
}

#timeradd:hover {
    transform: scale(1.05);
}

#timeradd:active {
    transform: scale(0.9);
}

/* Pomodoro */
.pomo-focus {
    background-color: #F34040;
}

.pomo-br {
    background-color: #55A3FF;
}

.pomo-lbr {
    background-color: #0D7CFF;
}

.pomo-control > div {
    transition: 0.2s ease;
    -webkit-user-select: none;
    /* Safari */
    -ms-user-select: none;
    /* IE 10 and IE 11 */
    user-select: none;
}
.pomo-control > div:hover {
    filter: brightness(1.1);
}
.pomo-control > div:active {
    transform: scale(0.9);
    filter: brightness(0.9);
}

/* Eye relax */
.eye-20 {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: min-content max-content;
    align-items: end;
    column-gap: 1rem;
}

/* Tasks list */
.list {
    margin: 15px auto 10px auto;
    overflow-y: scroll;
    overflow-x: hidden;
}

/* Rubber Duck */
#duck .main {
    transition: 0.2s ease;
    -webkit-user-select: none;
    /* Safari */
    -ms-user-select: none;
    /* IE 10 and IE 11 */
    user-select: none;
}

#duck .main:hover {
    transform: scale(1.05);
    filter: drop-shadow(-5px 5px 5px rgba(0, 0, 0, 0.423));
}

#duck .main:active {
    transform: scale(1);
}

/* Checkbox */
.c-contain *,
.c-contain *::before,
.c-contain *::after {
    box-sizing: content-box !important;
}

.c-contain {
    display: table;
    position: relative;
    padding-left: 1.75rem;
    cursor: pointer;
    margin-bottom: 0.5rem;
}

.c-contain input {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    opacity: 0;
}

.c-contain span {
    line-height: 0;
    font-size: 1.5rem;
    font-family: inherit;
}

.c-contain input[type="checkbox"]~.b-input {
    position: absolute;
    top: 0;
    left: 0;
    height: 1.25rem;
    width: 1.25rem;
    background: rgb(0, 0, 0);
    transition: background 250ms;
    border: none;
    border-radius: 0.4rem;
}

.c-contain input[type="checkbox"]~.b-input::after {
    content: "";
    position: absolute;
    display: none;
    left: 7px;
    top: 3px;
    width: 0.3rem;
    height: 0.6rem;
    border: solid #ffffff;
    border-width: 0 2px 2px 0;
    transition: background 250ms;
    transform: rotate(45deg);
}

.c-contain input[type="checkbox"]:disabled~.b-input::after {
    border-color: #ffffff;
}

.c-contain input:checked~.b-input::after {
    display: block;
}

.c-contain:hover input[type="checkbox"]:not([disabled])~.b-input,
.c-contain input[type="checkbox"]:focus~.b-input {
    background: #4b4b4b;
    border-color: rgba(0, 0, 0, 0);
}

.c-contain input:focus~.b-input {
    box-shadow: 0 0 0 2px #60a5fa;
}

.c-contain input[type="checkbox"]:checked~.b-input {
    background: rgb(0, 0, 0);
    border-color: rgba(0, 0, 0, 0);
}

.c-contain input[type="checkbox"]:disabled~.b-input {
    opacity: 0.5;
    cursor: not-allowed;
}

.c-contain:hover input[type="checkbox"]:not([disabled]):checked~.b-input,
.c-contain input[type="checkbox"]:checked:focus~.b-input {
    background: #4b4b4b;
    border-color: rgba(0, 0, 0, 0);
}
